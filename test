   1. Что такое Git?
а. Это облачное хранилище
б. Это сервер для ваших проектов
в. Это распределённая система управления версиями
г. Это таск-менеджер

   2.Как можно установить Git?
а. Лишь через официальный сайт
б. Можно через сайт или командную строку
в. Лишь через терминал (командную строку)
   
   3.Git и GitHub одно и тоже самое?
а. Да. Git это сокращение от GitHub
б. Оба продукта разработаны одной компанией, но они не одно и тоже
в. Нет, это продукты разных компаний
   
   4.Как в Git установить значение «Имя пользователя»?
а. git config user.name
б. Все команды, кроме git user.name
в. git config --global user.name
г. git user.name
   
   5.В каком редакторе можно работать с Git?
а. Только в редакторе Atom
б. Можно во всех редакторах, что поддерживают подключение терминала
в. Можно во всех редакторах
   
   6. Какая команда в терминале служит для перехода к нужной папке?
а. go "папка"
б. to "папка"
в. open "папка"
г. cd "папка"
   
   7. Можно ли отследить хронологию событий через Git?
а. Да, но лишь даты кто и что добавил в проект
б. Да, но лишь отслеживать добавленные файлы
в. Нет, нельзя
г. Да, можно отследить дату, автора и изменения что были внесены
   
   8. Как в Git установить глобально Email пользователя?
а. git user.email
б. git --global user.email
в. git config --global user.email 
г. git config-global user.email
   
   9. Сколько людей могут работать через Git над одним проектом?
а. Не более 10
б. Неограниченное количество 
в. Не более 50 
г. Не более 5
   
   10. Git и GitHub одно и тоже самое?
а. Нет, это продукты разных компаний
б. Оба продукта разработаны одной компанией, но они не одно и тоже
в. Да. Git это сокращение от GitHub 
   
   11. Сколько систем контроля версий существует?
а. Только Git
б. Git и SVN
в. Git и CVS
г. Много
   
   12. Что делает команда git add?
а. Создает файл с указанным именем и сразу добавляет его в Git
б. Добавляет локальный файл в удаленный репозиторий так, чтобы другие участники проекта могли его видеть
в. Это алиас/синоним команды git commit
г. Начинает отслеживать указанный файл или файлы

   13. Что означает статус файла untracked в выводе команды git status?
а. Что файл был удален из Git
б. Что система Git не отслеживает этот файл
в. Что файл находится вне репозитория Git
г. Что файл добавлен в .gitignore
   
   14. Что означает статус файла new в выводе команды git status?
а. Что файл только что был создан и еще не отслеживается системой Git
б. Что файл только начал отслеживаться Git и пока не имеет истории
в. Что файл удаляли из Git и потом восстановили командой git return
г. Такого статуса нет, есть только статус deleted file
   
   15. Что означает статус файла modified в выводе команды git status?
а. Что файл имеет историю в системе Git и был изменен относительно его последнего состояния
б. Такого статуса нет, есть только статусы new и deleted
в. Этот статус виден только командой git ignore и означает, что файл перестал отслеживаться системой Git
г. Статус означает, что файл добавлен в коммит
   
   16. Что такое коммит?
а. Это единица состояния проекта в Git
б. Это результат вывода команды git diff
в. Это обобщающее название одного из статусов файла в выводе git status: untracked, new, deleted или modified

   17. Как сделать коммит? 
а. Всего лишь набрать команду git commit в любой момент времени
б. Сделать изменения в файлах и перечислить их после git commit. Например так: git commit a.file, b.file
в. Сделать изменения, собрать эти изменения командой "git add" или "git commit -a" и указать коммит-сообщение после ключа "-m"
г. Нельзя сделать коммит, ведь такого понятия не существует
   
   18. В какой ситуации надо делать git status?
а. Чем чаще, тем лучше
б. Всегда при создании коммита
в. Всегда после команды git pull
г. Только если надо узнать, в каком статусе находится репозиторий, а так эта команда не является обязательной для любой манипуляции

   19. Что такое ветка в репозитории Git?
а. Это то же самое, что и коммит
б. Это минимум два коммита с одинаковым коммит-сообщением
в. Это разные пути развития проекта, по сути разные последовательности коммитов
г. Это механизм изменения конкретного файла
   
   20. Чем отличается master и origin master
а. Это просто два разных названия одной ветки
б. master принадлежит локальному репозиторию, а origin master - удаленному
в. Это две разные ветки локального репозитория
г. Ветки origin master не существует
